{"version":3,"file":"vim.js","names":["Plugin","editor","activateMode","event","_opt","logger","debug","mode","cm","getCodeMirror","getWrapperElement","classList","remove","add","isInsertMode","isTrusted","text","data","replaceSelection","normalizeKeyName","key","keyName","vim","maybeInitVimState","isNumeric","ctrlKey","altKey","metaKey","shiftKey","match","keyBinding","inkdrop","keymaps","findKeyBindings","keystrokes","target","getInputField","isBufferingKey","b","webkitMatchesSelector","inputState","hasOperatorOrMotion","motion","operator","length","selectedCharacter","keyBuffer","pendingCommand","stopBufferingKey","stopPropagation","preventDefault","pushRepeatDigit","keys","keysMatcher","exec","_event","yankClipboard","activate","CodeMirror","isEditorActive","getActiveEditor","onEditorLoad","handleEditorLoad","deactivate","disposables","dispose","deactivateMode","originalKeyMap","getOption","setOption","on","handleVimModeChange","handleFocusEditor","el","registerCommands","registerExCommands","off","startBufferingKey","command","customBufferingModeClass","wrapper","classes","Array","prototype","slice","apply","i","startsWith","undefined","contains","bufferKey","vimKey","cmKeyToVimKey","CompositeDisposable","doKeyToKey","toKeys","substring","index","handleEditorKeyDown","KeyboardEvent","exactMatchCandidates","findMatchCandidates","bindings","findExactMatches","document","activeElement","commands","dispatch","h","e","Object","assign","state","operation","curOp","isVimOp","type","commandDispatcher","processCommand","Vim","suppressErrorLogging","console","error","originalEvent","p","visualMode","handlers","clearInputState","exitVisualMode","exitInsertMode","motionArgs","forward","linewise","wordEnd","bigWord","inclusive","toJumplist","handler","getRepeat","toFirstChar","repeatOffset","explicitRepeat","action","actionArgs","position","context","isEdit","insertAt","textObjectInner","operatorArgs","indentRight","after","toLower","shouldMoveCursor","searchArgs","querySrc","wholeWordOnly","replace","blockwise","interlaceInsertRepeat","operatorMotionArgs","visualLine","increase","backtrack","sameLine","querySelector","scrollTop","clientHeight","scrollHeight","addEventListener","handleEditorTextInput","Disposable","removeEventListener","defineEx","getVimGlobalState","clipboard","readText","indexOf","registerController","pushText","module","exports"],"sources":["../src/vim.js"],"sourcesContent":["import { logger } from 'inkdrop'\nimport vimKeymap from './keymap'\nimport { CompositeDisposable, Disposable } from 'event-kit'\nimport CodeMirror from 'codemirror'\nimport { clipboard } from 'electron'\n\nclass Plugin {\n  activate() {\n    this.vim = vimKeymap(CodeMirror)\n    if (inkdrop.isEditorActive()) {\n      this.activateMode(inkdrop.getActiveEditor())\n    }\n    inkdrop.onEditorLoad(this.handleEditorLoad)\n  }\n\n  deactivate() {\n    if (this.disposables) {\n      this.disposables.dispose()\n    }\n    if (inkdrop.isEditorActive()) {\n      this.deactivateMode(inkdrop.getActiveEditor())\n    }\n  }\n\n  activateMode(editor) {\n    const { cm } = editor\n    this.originalKeyMap = cm.getOption('keyMap')\n    cm.setOption('keyMap', 'vim')\n    cm.on('vim-mode-change', this.handleVimModeChange)\n    cm.on('focus', this.handleFocusEditor)\n\n    const el = cm.getWrapperElement()\n    el.classList.add('vim-mode', 'normal-mode')\n\n    this.registerCommands()\n    this.registerExCommands()\n  }\n\n  deactivateMode(editor) {\n    const { cm } = editor\n    if (cm && this.originalKeyMap) {\n      cm.setOption('keyMap', this.originalKeyMap)\n      cm.off('vim-mode-change', this.handleVimModeChange)\n      const el = cm.getWrapperElement()\n      el.classList.remove('vim-mode')\n    }\n  }\n\n  startBufferingKey(command, customBufferingModeClass) {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    logger.debug('Start key buffering')\n    wrapper.classList.add('key-buffering')\n    if (customBufferingModeClass) {\n      wrapper.classList.add('key-buffering-' + customBufferingModeClass)\n    }\n    this.pendingCommand = command\n  }\n\n  stopBufferingKey() {\n    logger.debug('Stop key buffering')\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    const classes = Array.prototype.slice.apply(wrapper.classList)\n    for (const i of classes) {\n      if (i.startsWith('key-buffering')) {\n        wrapper.classList.remove(i)\n      }\n    }\n    this.pendingCommand = undefined\n  }\n\n  isBufferingKey() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('key-buffering')\n  }\n\n  bufferKey(key) {\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const vimKey = this.vim.cmKeyToVimKey(\"'\" + key + \"'\")\n    vim.inputState.keyBuffer = vim.inputState.keyBuffer + vimKey\n    logger.debug('keyBuffer:', vim.inputState.keyBuffer, vim.inputState)\n  }\n\n  isInsertMode() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('insert-mode')\n  }\n\n  registerCommands() {\n    const disposables = new CompositeDisposable()\n    const editor = inkdrop.getActiveEditor()\n    const { cm } = editor\n    const wrapper = cm.getWrapperElement()\n\n    const doKeyToKey = async command => {\n      logger.debug('doKeyToKey:', command)\n      let keys = command.toKeys\n      while (keys) {\n        // Pull off one command key, which is either a single character\n        // or a special sequence wrapped in '<' and '>', e.g. '<Space>'.\n        const match = /<\\w+-.+?>|<\\w+>|./.exec(keys)\n        let key = match[0]\n        logger.debug('key:', key)\n        keys = keys.substring(match.index + key.length)\n\n        if (this.isBufferingKey()) {\n          this.handleEditorKeyDown(new KeyboardEvent('keydown', { key }))\n        } else {\n          if (key.match(/^[A-Z]$/)) {\n            key = 'shift-' + key\n          }\n          const { exactMatchCandidates } = inkdrop.keymaps.findMatchCandidates([\n            key\n          ])\n          logger.debug('exactMatchCandidates:', exactMatchCandidates)\n          const bindings = inkdrop.keymaps.findExactMatches(\n            exactMatchCandidates,\n            document.activeElement\n          )\n          const b = bindings[0]\n          if (b) {\n            inkdrop.commands.dispatch(document.activeElement, b.command)\n          } else {\n            logger.debug('command not found for key:', key)\n          }\n        }\n      }\n    }\n\n    // bind key to command\n    const h = command => {\n      return e => {\n        logger.debug(\n          'command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState)\n        )\n        e.stopPropagation()\n        const vim = this.vim.maybeInitVimState(cm)\n        return cm.operation(() => {\n          cm.curOp.isVimOp = true\n          try {\n            if (command.type === 'keyToKey') {\n              doKeyToKey(command)\n            } else {\n              this.vim.commandDispatcher.processCommand(cm, vim, command)\n            }\n          } catch (e) {\n            // clear VIM state in case it's in a bad state.\n            cm.state.vim = undefined\n            this.vim.maybeInitVimState(cm)\n            if (!CodeMirror.Vim.suppressErrorLogging) {\n              console.error(e)\n            }\n            throw e\n          }\n          return true\n        })\n      }\n    }\n    // bind keystroke to command\n    const b = command => {\n      return e => {\n        logger.debug(\n          'buffer command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent\n        )\n        this.startBufferingKey(h(command), 'command')\n        this.bufferKey(e.originalEvent.key)\n      }\n    }\n    // bind keystroke to operator\n    const p = command => {\n      return e => {\n        logger.debug(\n          'operator command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent,\n          e\n        )\n        const vim = this.vim.maybeInitVimState(cm)\n        if (\n          !vim.inputState.operator &&\n          !this.isBufferingKey() &&\n          !vim.visualMode\n        ) {\n          this.startBufferingKey(e => {\n            const el = cm.getInputField()\n            const keyBinding = inkdrop.keymaps.findKeyBindings({\n              keystrokes: e.key,\n              target: el\n            })\n            if (keyBinding.length > 0) {\n              inkdrop.commands.dispatch(el, keyBinding[0].command)\n            }\n          }, 'operator')\n          if (e.originalEvent) {\n            this.bufferKey(e.originalEvent.key)\n          } else {\n            logger.debug('buffer key:', command.keys)\n            this.bufferKey(command.keys)\n          }\n        }\n        return h(command)(e)\n      }\n    }\n    const handlers = {\n      'vim:native!': () => {},\n      'vim:reset-normal-mode': e => {\n        CodeMirror.Vim.clearInputState(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim:exit-visual-mode': e => {\n        logger.debug('exit-visual-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitVisualMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim:exit-insert-mode': e => {\n        logger.debug('exit-insert-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitInsertMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim:move-left': h({\n        keys: 'h',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false }\n      }),\n      'vim:move-right': h({\n        keys: 'l',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true }\n      }),\n      'vim:move-up': h({\n        keys: 'k',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, linewise: true }\n      }),\n      'vim:move-down': h({\n        keys: 'j',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, linewise: true }\n      }),\n      'vim:move-up-by-display-lines': h({\n        keys: 'gk',\n        type: 'motion',\n        motion: 'moveByDisplayLines',\n        motionArgs: { forward: false }\n      }),\n      'vim:move-down-by-display-lines': h({\n        keys: 'gj',\n        type: 'motion',\n        motion: 'moveByDisplayLines',\n        motionArgs: { forward: true }\n      }),\n\n      'vim:move-to-next-word': h({\n        keys: 'w',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false }\n      }),\n      'vim:move-to-next-whole-word': h({\n        keys: 'W',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false, bigWord: true }\n      }),\n      'vim:move-to-end-of-word': h({\n        keys: 'e',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: true, inclusive: true }\n      }),\n      'vim:move-to-previous-end-of-word': h({\n        keys: 'ge',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: true, inclusive: true }\n      }),\n      'vim:move-to-end-of-whole-word': h({\n        keys: 'E',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: true,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim:move-to-previous-end-of-whole-word': h({\n        keys: 'gE',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: false,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim:move-to-previous-word': h({\n        keys: 'b',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false }\n      }),\n      'vim:move-to-previous-whole-word': h({\n        keys: 'B',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false, bigWord: true }\n      }),\n      'vim:move-to-next-paragraph': h({\n        keys: '}',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim:move-to-previous-paragraph': h({\n        keys: '{',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n      'vim:move-to-beginning-of-line-with-zero': (() => {\n        const handler = h({\n          keys: '0',\n          type: 'motion',\n          motion: 'moveToStartOfLine'\n        })\n        return e => {\n          const vim = this.vim.maybeInitVimState(cm)\n          if (vim.inputState.getRepeat() > 0) {\n            vim.inputState.pushRepeatDigit('0')\n          } else {\n            return handler(e)\n          }\n        }\n      })(),\n      'vim:move-to-beginning-of-line': h({\n        keys: '0',\n        type: 'motion',\n        motion: 'moveToStartOfLine'\n      }),\n      'vim:move-to-first-character-of-line': h({\n        keys: '^',\n        type: 'motion',\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:move-to-first-character-of-line-and-down': h({\n        keys: '_',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true, repeatOffset: -1 }\n      }),\n      'vim:move-to-last-character-of-line': h({\n        keys: '$',\n        type: 'motion',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true }\n      }),\n      'vim:move-to-last-nonblank-character-of-line-and-down': () => {\n        '???'\n      },\n      'vim:move-to-first-character-of-line-up': h({\n        keys: '-',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, toFirstChar: true }\n      }),\n      'vim:move-to-first-character-of-line-down': h({\n        keys: '+',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true }\n      }),\n\n      'vim:move-to-start-of-file': h({\n        keys: 'gg',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: false,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim:scroll-half-screen-up': h({\n        keys: '<C-u>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: false, explicitRepeat: true }\n      }),\n      'vim:scroll-full-screen-up': h({\n        keys: '<C-b>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: false }\n      }),\n      'vim:scroll-half-screen-down': h({\n        keys: '<C-d>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: true, explicitRepeat: true }\n      }),\n      'vim:scroll-full-screen-down': h({\n        keys: '<C-f>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: true }\n      }),\n      'vim:scroll-down': h({\n        keys: '<C-e>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: true, linewise: true }\n      }),\n      'vim:scroll-up': h({\n        keys: '<C-y>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: false, linewise: true }\n      }),\n      'vim:scroll-cursor-to-top': h({\n        keys: 'z<CR>',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:scroll-cursor-to-top-leave': h({\n        keys: 'zt',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' }\n      }),\n      'vim:scroll-cursor-to-middle': h({\n        keys: 'z.',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:scroll-cursor-to-middle-leave': h({\n        keys: 'zz',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' }\n      }),\n      'vim:scroll-cursor-to-bottom': h({\n        keys: 'z-',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' }\n      }),\n      'vim:scroll-cursor-to-bottom-leave': h({\n        keys: 'zb',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:move-to-line': h({\n        keys: 'G',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: true,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim:move-to-top-of-screen': h({\n        keys: 'H',\n        type: 'motion',\n        motion: 'moveToTopLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim:move-to-bottom-of-screen': h({\n        keys: 'L',\n        type: 'motion',\n        motion: 'moveToBottomLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim:move-to-middle-of-screen': h({\n        keys: 'M',\n        type: 'motion',\n        motion: 'moveToMiddleLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n\n      'vim:delete': p({ keys: 'd', type: 'operator', operator: 'delete' }),\n      'vim:delete-to-last-character-of-line': h({\n        keys: 'D',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim:change': p({ keys: 'c', type: 'operator', operator: 'change' }),\n      'vim:change-to-last-character-of-line': h({\n        keys: 'C',\n        type: 'operatorMotion',\n        operator: 'change',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim:substitute-line': h({\n        keys: 'S',\n        type: 'keyToKey',\n        toKeys: 'cc',\n        context: 'normal'\n      }),\n      'vim:substitute-line-visual': h({\n        keys: 'S',\n        type: 'keyToKey',\n        toKeys: 'VdO',\n        context: 'visual'\n      }),\n      'vim:replace': b({\n        keys: 'r<character>',\n        type: 'action',\n        action: 'replace',\n        isEdit: true\n      }),\n      'vim:insert-at-beginning-of-line': h({\n        keys: 'I',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'firstNonBlank' },\n        context: 'normal'\n      }),\n      'vim:text-object-manipulation-inner': b({\n        keys: 'i<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation',\n        motionArgs: { textObjectInner: true }\n      }),\n      'vim:text-object-manipulation': b({\n        keys: 'a<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation'\n      }),\n      'vim:indent': p({\n        keys: '>',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: true }\n      }),\n      'vim:outdent': p({\n        keys: '<',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: false }\n      }),\n      'vim:auto-indent': () => {\n        'not supported'\n      },\n      'vim:join': h({\n        keys: 'J',\n        type: 'action',\n        action: 'joinLines',\n        isEdit: true\n      }),\n\n      'vim:yank': p({ keys: 'y', type: 'operator', operator: 'yank' }),\n      'vim:yank-line': h({\n        keys: 'Y',\n        type: 'operatorMotion',\n        operator: 'yank',\n        motion: 'expandToLine',\n        motionArgs: { linewise: true },\n        context: 'normal'\n      }),\n      'vim:put-before': h({\n        keys: 'P',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: false, isEdit: true }\n      }),\n      'vim:put-after': h({\n        keys: 'p',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: true, isEdit: true }\n      }),\n\n      'vim:toggle-case': h({\n        keys: 'g~',\n        type: 'operator',\n        operator: 'changeCase'\n      }),\n      'vim:upper-case': h({\n        keys: 'gU',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: false },\n        isEdit: true\n      }),\n      'vim:lower-case': h({\n        keys: 'gu',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: true },\n        isEdit: true\n      }),\n      'vim:toggle-case-now': h({\n        keys: '~',\n        type: 'operatorMotion',\n        operator: 'changeCase',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorArgs: { shouldMoveCursor: true },\n        context: 'normal'\n      }),\n\n      'vim:mark': b({\n        keys: 'm<character>',\n        type: 'action',\n        action: 'setMark'\n      }),\n      'vim:move-to-mark-literal': b({\n        keys: '`<character>',\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true }\n      }),\n      'vim:move-to-mark': b({\n        keys: \"'<character>\",\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true, linewise: true }\n      }),\n\n      'vim:find': b({\n        keys: 'f<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim:find-backwards': b({\n        keys: 'F<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim:till': b({\n        keys: 't<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim:till-backwards': b({\n        keys: 'T<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim:repeat-find': h({\n        keys: ';',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: true }\n      }),\n      'vim:repeat-find-reverse': h({\n        keys: ',',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: false }\n      }),\n\n      'vim:search': h({\n        keys: '/',\n        type: 'search',\n        searchArgs: { forward: true, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim:reverse-search': h({\n        keys: '?',\n        type: 'search',\n        searchArgs: { forward: false, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim:search-current-word': h({\n        keys: '*',\n        type: 'search',\n        searchArgs: {\n          forward: true,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim:reverse-search-current-word': h({\n        keys: '#',\n        type: 'search',\n        searchArgs: {\n          forward: false,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim:repeat-search': h({\n        keys: 'n',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim:repeat-search-backwards': h({\n        keys: 'N',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n\n      'vim:bracket-matching-motion': h({\n        keys: '%',\n        type: 'motion',\n        motion: 'moveToMatchedSymbol',\n        motionArgs: { inclusive: true, toJumplist: true }\n      }),\n\n      'vim:ex-command': h({ keys: ':', type: 'ex' }),\n\n      // normal mode\n      'vim:activate-insert-mode': h({\n        keys: 'i',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'inplace' },\n        context: 'normal'\n      }),\n      'vim:activate-replace-mode': h({\n        keys: 'R',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { replace: true }\n      }),\n      'vim:activate-characterwise-visual-mode': h({\n        keys: 'v',\n        type: 'action',\n        action: 'toggleVisualMode'\n      }),\n      'vim:activate-linewise-visual-mode': h({\n        keys: 'V',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { linewise: true }\n      }),\n      'vim:activate-blockwise-visual-mode': h({\n        keys: '<C-v>',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { blockwise: true }\n      }),\n\n      'vim:undo': h({\n        keys: 'u',\n        type: 'action',\n        action: 'undo',\n        context: 'normal'\n      }),\n\n      'vim:insert-above-with-newline': h({\n        keys: 'O',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: false },\n        context: 'normal'\n      }),\n      'vim:insert-below-with-newline': h({\n        keys: 'o',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: true },\n        context: 'normal'\n      }),\n      'vim:insert-after': h({\n        keys: 'a',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'charAfter' },\n        context: 'normal'\n      }),\n      'vim:insert-after-end-of-line': h({\n        keys: 'A',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'eol' },\n        context: 'normal'\n      }),\n      'vim:delete-right': h({\n        keys: 'x',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorMotionArgs: { visualLine: false }\n      }),\n      'vim:delete-left': h({\n        keys: 'X',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false },\n        operatorMotionArgs: { visualLine: true }\n      }),\n      'vim:substitute': h({\n        keys: 's',\n        type: 'keyToKey',\n        toKeys: 'cl',\n        context: 'normal'\n      }),\n      'vim:substitute-visual': h({\n        keys: 's',\n        type: 'keyToKey',\n        toKeys: 'c',\n        context: 'visual'\n      }),\n      'vim:repeat': h({\n        keys: '.',\n        type: 'action',\n        action: 'repeatLastEdit'\n      }),\n\n      'vim:increase': h({\n        keys: '<C-a>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: true, backtrack: false }\n      }),\n      'vim:decrease': h({\n        keys: '<C-x>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: false, backtrack: false }\n      }),\n\n      'vim:register-prefix': b({\n        keys: '\"<character>',\n        type: 'action',\n        action: 'setRegister'\n      }),\n\n      // insert mode\n      'vim:delete-to-beginning-of-word': h({\n        keys: '<C-w>',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false },\n        context: 'insert'\n      }),\n\n      // visual mode\n      'vim:insert-at-start-of-target': h({\n        keys: 'I',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'startOfSelectedArea' },\n        context: 'visual'\n      }),\n      'vim:insert-at-end-of-target': h({\n        keys: 'A',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'endOfSelectedArea' },\n        context: 'visual'\n      }),\n      'vim:reverse-selections': h({\n        keys: 'o',\n        type: 'motion',\n        motion: 'moveToOtherHighlightedEnd',\n        context: 'visual'\n      }),\n      'vim:reverse-selections-at-same-line': h({\n        keys: 'O',\n        type: 'motion',\n        motion: 'moveToOtherHighlightedEnd',\n        motionArgs: { sameLine: true },\n        context: 'visual'\n      })\n    }\n    disposables.add(inkdrop.commands.add(wrapper, handlers))\n    disposables.add(\n      inkdrop.commands.add(document.querySelector('.mde-preview'), {\n        'vim:move-to-start-of-file': ({ target }) => {\n          target.scrollTop = 0\n        },\n        'vim:scroll-up': ({ target }) => {\n          target.scrollTop -= 30\n        },\n        'vim:scroll-down': ({ target }) => {\n          target.scrollTop += 30\n        },\n        'vim:scroll-half-screen-up': ({ target }) => {\n          target.scrollTop -= target.clientHeight / 2\n        },\n        'vim:scroll-half-screen-down': ({ target }) => {\n          target.scrollTop += target.clientHeight / 2\n        },\n        'vim:scroll-full-screen-up': ({ target }) => {\n          target.scrollTop -= target.clientHeight\n        },\n        'vim:scroll-full-screen-down': ({ target }) => {\n          target.scrollTop += target.clientHeight\n        },\n        'vim:move-to-line': ({ target }) => {\n          target.scrollTop = target.scrollHeight\n        }\n      })\n    )\n    wrapper.addEventListener('textInput', this.handleEditorTextInput)\n    wrapper.addEventListener('keydown', this.handleEditorKeyDown)\n    disposables.add(\n      new Disposable(() =>\n        wrapper.removeEventListener('keydown', this.handleEditorKeyDown)\n      )\n    )\n\n    this.disposables = disposables\n  }\n\n  registerExCommands() {\n    const el = this.getCodeMirror().getWrapperElement()\n    this.vim.defineEx('write', 'w', () => {\n      inkdrop.commands.dispatch(el, 'core:save-note')\n    })\n    this.vim.defineEx('next', 'n', () => {\n      inkdrop.commands.dispatch(el, 'core:open-next-note')\n    })\n    this.vim.defineEx('prev', '', () => {\n      inkdrop.commands.dispatch(el, 'core:open-prev-note')\n    })\n    this.vim.defineEx('preview', 'p', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-preview')\n    })\n    this.vim.defineEx('side-by-side', 'side', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-side-by-side')\n    })\n  }\n\n  getCodeMirror() {\n    return inkdrop.getActiveEditor().cm\n  }\n\n  yankClipboard() {\n    const state = this.vim.getVimGlobalState()\n    const text = clipboard.readText()\n    const linewise = text.indexOf('\\n') >= 0\n    state.registerController.pushText('0', 'yank', text, linewise, true)\n  }\n\n  handleEditorLoad = editor => {\n    this.activateMode(editor)\n  }\n\n  handleVimModeChange = (event, _opt) => {\n    logger.debug('vim mode changed:', event)\n    const { mode } = event\n    const cm = this.getCodeMirror()\n    cm.getWrapperElement().classList.remove('insert-mode')\n    cm.getWrapperElement().classList.remove('visual-mode')\n    cm.getWrapperElement().classList.remove('normal-mode')\n    cm.getWrapperElement().classList.remove('replace-mode')\n    switch (mode) {\n      case 'normal':\n        cm.getWrapperElement().classList.add('normal-mode')\n        break\n      case 'visual':\n        cm.getWrapperElement().classList.add('visual-mode')\n        break\n      case 'replace':\n        cm.getWrapperElement().classList.add('replace-mode')\n        break\n      case 'insert':\n        cm.getWrapperElement().classList.add('insert-mode')\n        break\n    }\n  }\n\n  handleEditorTextInput = event => {\n    // only process if the event is fired via EventTarget.dispatchEvent()\n    if (this.isInsertMode() && !event.isTrusted) {\n      logger.debug('handle text input:', event)\n      const text = event.data\n      const cm = this.getCodeMirror()\n      cm.replaceSelection(text)\n    }\n  }\n\n  handleEditorKeyDown = event => {\n    const normalizeKeyName = key => {\n      switch (key) {\n        case 'Enter':\n          return 'enter'\n        case ' ':\n          return 'space'\n        case 'ArrowRight':\n          return 'right'\n        case 'ArrowLeft':\n          return 'left'\n        case 'ArrowUp':\n          return 'up'\n        case 'ArrowDown':\n          return 'down'\n        default:\n          return key\n      }\n    }\n    const keyName = normalizeKeyName(event.key)\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const isNumeric =\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.shiftKey &&\n      keyName.match(/^\\d$/)\n\n    const keyBinding = inkdrop.keymaps.findKeyBindings({\n      keystrokes: keyName,\n      target: cm.getInputField()\n    })\n\n    if (this.isBufferingKey()) {\n      logger.debug('handle key buffering:', keyName, event)\n      const b = cm\n        .getInputField()\n        .webkitMatchesSelector(\n          '.CodeMirror.vim-mode:not(.insert-mode) textarea'\n        )\n      logger.debug('keybinding check:', keyBinding, b)\n\n      if (\n        keyName !== 'Ctrl' &&\n        keyName !== 'Alt' &&\n        keyName !== 'Shift' &&\n        keyName !== 'Meta'\n      ) {\n        const { inputState } = vim\n        const hasOperatorOrMotion = inputState.motion || inputState.operator\n        if (\n          (keyName.length === 1 || keyName === 'space') &&\n          (!isNumeric || !hasOperatorOrMotion)\n        ) {\n          inputState.selectedCharacter = event.key\n          inputState.keyBuffer = ''\n\n          if (keyBinding.length === 0) {\n            const { pendingCommand } = this\n            this.stopBufferingKey()\n\n            if (typeof pendingCommand === 'function') {\n              pendingCommand(event)\n            }\n\n            event.stopPropagation()\n            event.preventDefault()\n          }\n        } else if (isNumeric) {\n          vim.inputState.pushRepeatDigit(keyName)\n        }\n      }\n    } else if (!this.isInsertMode()) {\n      if (isNumeric) {\n        if (keyBinding.length === 0) {\n          vim.inputState.pushRepeatDigit(keyName)\n        }\n      } else {\n        // push key buffer to the repeat digit\n        const keys = vim.inputState.keyBuffer\n        vim.inputState.keyBuffer = ''\n        const keysMatcher = /^(\\d*)(.*)$/.exec(keys)\n        if (keysMatcher[1] && keysMatcher[1] !== '0') {\n          vim.inputState.pushRepeatDigit(keysMatcher[1])\n        }\n      }\n    }\n  }\n\n  handleFocusEditor = _event => {\n    this.yankClipboard()\n  }\n}\n\nmodule.exports = new Plugin()\n"],"mappings":"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"}