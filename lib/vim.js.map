{"version":3,"sources":["../src/vim.js"],"names":["Plugin","editor","activateMode","event","_opt","logger","debug","mode","cm","getCodeMirror","getWrapperElement","classList","remove","add","isInsertMode","isTrusted","text","data","replaceSelection","normalizeKeyName","key","keyName","vim","maybeInitVimState","isNumeric","ctrlKey","altKey","metaKey","shiftKey","match","keyBinding","inkdrop","keymaps","findKeyBindings","keystrokes","target","getInputField","isBufferingKey","b","webkitMatchesSelector","inputState","hasOperatorOrMotion","motion","operator","length","selectedCharacter","keyBuffer","pendingCommand","stopBufferingKey","stopPropagation","preventDefault","pushRepeatDigit","keys","keysMatcher","exec","_event","yankClipboard","activate","CodeMirror","isEditorActive","getActiveEditor","onEditorLoad","handleEditorLoad","deactivate","disposables","dispose","deactivateMode","originalKeyMap","getOption","setOption","on","handleVimModeChange","handleFocusEditor","el","registerCommands","registerExCommands","off","startBufferingKey","command","customBufferingModeClass","wrapper","classes","Array","prototype","slice","apply","i","startsWith","undefined","contains","bufferKey","vimKey","cmKeyToVimKey","CompositeDisposable","doKeyToKey","toKeys","substring","index","handleEditorKeyDown","KeyboardEvent","exactMatchCandidates","findMatchCandidates","bindings","findExactMatches","document","activeElement","commands","dispatch","h","e","Object","assign","state","operation","curOp","isVimOp","type","commandDispatcher","processCommand","Vim","suppressErrorLogging","console","error","originalEvent","p","visualMode","handlers","clearInputState","exitVisualMode","exitInsertMode","motionArgs","forward","linewise","wordEnd","bigWord","inclusive","toJumplist","handler","getRepeat","toFirstChar","repeatOffset","explicitRepeat","action","actionArgs","position","context","isEdit","insertAt","textObjectInner","operatorArgs","indentRight","after","toLower","shouldMoveCursor","searchArgs","querySrc","wholeWordOnly","replace","blockwise","interlaceInsertRepeat","operatorMotionArgs","visualLine","increase","backtrack","sameLine","querySelector","scrollTop","clientHeight","scrollHeight","addEventListener","handleEditorTextInput","Disposable","removeEventListener","defineEx","getVimGlobalState","clipboard","readText","indexOf","registerController","pushText","module","exports"],"mappings":"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","sourcesContent":["import { logger } from 'inkdrop'\nimport vimKeymap from './keymap'\nimport { CompositeDisposable, Disposable } from 'event-kit'\nimport CodeMirror from 'codemirror'\nimport { clipboard } from 'electron'\n\nclass Plugin {\n  activate() {\n    this.vim = vimKeymap(CodeMirror)\n    if (inkdrop.isEditorActive()) {\n      this.activateMode(inkdrop.getActiveEditor())\n    }\n    inkdrop.onEditorLoad(this.handleEditorLoad)\n  }\n\n  deactivate() {\n    if (this.disposables) {\n      this.disposables.dispose()\n    }\n    if (inkdrop.isEditorActive()) {\n      this.deactivateMode(inkdrop.getActiveEditor())\n    }\n  }\n\n  activateMode(editor) {\n    const { cm } = editor\n    this.originalKeyMap = cm.getOption('keyMap')\n    cm.setOption('keyMap', 'vim')\n    cm.on('vim-mode-change', this.handleVimModeChange)\n    cm.on('focus', this.handleFocusEditor)\n\n    const el = cm.getWrapperElement()\n    el.classList.add('vim-mode', 'normal-mode')\n\n    this.registerCommands()\n    this.registerExCommands()\n  }\n\n  deactivateMode(editor) {\n    const { cm } = editor\n    if (cm && this.originalKeyMap) {\n      cm.setOption('keyMap', this.originalKeyMap)\n      cm.off('vim-mode-change', this.handleVimModeChange)\n      const el = cm.getWrapperElement()\n      el.classList.remove('vim-mode')\n    }\n  }\n\n  startBufferingKey(command, customBufferingModeClass) {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    logger.debug('Start key buffering')\n    wrapper.classList.add('key-buffering')\n    if (customBufferingModeClass) {\n      wrapper.classList.add('key-buffering-' + customBufferingModeClass)\n    }\n    this.pendingCommand = command\n  }\n\n  stopBufferingKey() {\n    logger.debug('Stop key buffering')\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    const classes = Array.prototype.slice.apply(wrapper.classList)\n    for (const i of classes) {\n      if (i.startsWith('key-buffering')) {\n        wrapper.classList.remove(i)\n      }\n    }\n    this.pendingCommand = undefined\n  }\n\n  isBufferingKey() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('key-buffering')\n  }\n\n  bufferKey(key) {\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const vimKey = this.vim.cmKeyToVimKey(\"'\" + key + \"'\")\n    vim.inputState.keyBuffer = vim.inputState.keyBuffer + vimKey\n    logger.debug('keyBuffer:', vim.inputState.keyBuffer, vim.inputState)\n  }\n\n  isInsertMode() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('insert-mode')\n  }\n\n  registerCommands() {\n    const disposables = new CompositeDisposable()\n    const editor = inkdrop.getActiveEditor()\n    const { cm } = editor\n    const wrapper = cm.getWrapperElement()\n\n    const doKeyToKey = async command => {\n      logger.debug('doKeyToKey:', command)\n      let keys = command.toKeys\n      while (keys) {\n        // Pull off one command key, which is either a single character\n        // or a special sequence wrapped in '<' and '>', e.g. '<Space>'.\n        const match = /<\\w+-.+?>|<\\w+>|./.exec(keys)\n        let key = match[0]\n        logger.debug('key:', key)\n        keys = keys.substring(match.index + key.length)\n\n        if (this.isBufferingKey()) {\n          this.handleEditorKeyDown(new KeyboardEvent('keydown', { key }))\n        } else {\n          if (key.match(/^[A-Z]$/)) {\n            key = 'shift-' + key\n          }\n          const { exactMatchCandidates } = inkdrop.keymaps.findMatchCandidates([\n            key\n          ])\n          logger.debug('exactMatchCandidates:', exactMatchCandidates)\n          const bindings = inkdrop.keymaps.findExactMatches(\n            exactMatchCandidates,\n            document.activeElement\n          )\n          const b = bindings[0]\n          if (b) {\n            inkdrop.commands.dispatch(document.activeElement, b.command)\n          } else {\n            logger.debug('command not found for key:', key)\n          }\n        }\n      }\n    }\n\n    // bind key to command\n    const h = command => {\n      return e => {\n        logger.debug(\n          'command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState)\n        )\n        e.stopPropagation()\n        const vim = this.vim.maybeInitVimState(cm)\n        return cm.operation(() => {\n          cm.curOp.isVimOp = true\n          try {\n            if (command.type === 'keyToKey') {\n              doKeyToKey(command)\n            } else {\n              this.vim.commandDispatcher.processCommand(cm, vim, command)\n            }\n          } catch (e) {\n            // clear VIM state in case it's in a bad state.\n            cm.state.vim = undefined\n            this.vim.maybeInitVimState(cm)\n            if (!CodeMirror.Vim.suppressErrorLogging) {\n              console.error(e)\n            }\n            throw e\n          }\n          return true\n        })\n      }\n    }\n    // bind keystroke to command\n    const b = command => {\n      return e => {\n        logger.debug(\n          'buffer command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent\n        )\n        this.startBufferingKey(h(command), 'command')\n        this.bufferKey(e.originalEvent.key)\n      }\n    }\n    // bind keystroke to operator\n    const p = command => {\n      return e => {\n        logger.debug(\n          'operator command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent,\n          e\n        )\n        const vim = this.vim.maybeInitVimState(cm)\n        if (\n          !vim.inputState.operator &&\n          !this.isBufferingKey() &&\n          !vim.visualMode\n        ) {\n          this.startBufferingKey(e => {\n            const el = cm.getInputField()\n            const keyBinding = inkdrop.keymaps.findKeyBindings({\n              keystrokes: e.key,\n              target: el\n            })\n            if (keyBinding.length > 0) {\n              inkdrop.commands.dispatch(el, keyBinding[0].command)\n            }\n          }, 'operator')\n          if (e.originalEvent) {\n            this.bufferKey(e.originalEvent.key)\n          } else {\n            logger.debug('buffer key:', command.keys)\n            this.bufferKey(command.keys)\n          }\n        }\n        return h(command)(e)\n      }\n    }\n    const handlers = {\n      'vim:native!': () => {},\n      'vim:reset-normal-mode': e => {\n        CodeMirror.Vim.clearInputState(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim:exit-visual-mode': e => {\n        logger.debug('exit-visual-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitVisualMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim:exit-insert-mode': e => {\n        logger.debug('exit-insert-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitInsertMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim:move-left': h({\n        keys: 'h',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false }\n      }),\n      'vim:move-right': h({\n        keys: 'l',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true }\n      }),\n      'vim:move-up': h({\n        keys: 'k',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, linewise: true }\n      }),\n      'vim:move-down': h({\n        keys: 'j',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, linewise: true }\n      }),\n      'vim:move-up-by-display-lines': h({\n        keys: 'gk',\n        type: 'motion',\n        motion: 'moveByDisplayLines',\n        motionArgs: { forward: false }\n      }),\n      'vim:move-down-by-display-lines': h({\n        keys: 'gj',\n        type: 'motion',\n        motion: 'moveByDisplayLines',\n        motionArgs: { forward: true }\n      }),\n\n      'vim:move-to-next-word': h({\n        keys: 'w',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false }\n      }),\n      'vim:move-to-next-whole-word': h({\n        keys: 'W',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false, bigWord: true }\n      }),\n      'vim:move-to-end-of-word': h({\n        keys: 'e',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: true, inclusive: true }\n      }),\n      'vim:move-to-previous-end-of-word': h({\n        keys: 'ge',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: true, inclusive: true }\n      }),\n      'vim:move-to-end-of-whole-word': h({\n        keys: 'E',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: true,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim:move-to-previous-end-of-whole-word': h({\n        keys: 'gE',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: false,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim:move-to-previous-word': h({\n        keys: 'b',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false }\n      }),\n      'vim:move-to-previous-whole-word': h({\n        keys: 'B',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false, bigWord: true }\n      }),\n      'vim:move-to-next-paragraph': h({\n        keys: '}',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim:move-to-previous-paragraph': h({\n        keys: '{',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n      'vim:move-to-beginning-of-line-with-zero': (() => {\n        const handler = h({\n          keys: '0',\n          type: 'motion',\n          motion: 'moveToStartOfLine'\n        })\n        return e => {\n          const vim = this.vim.maybeInitVimState(cm)\n          if (vim.inputState.getRepeat() > 0) {\n            vim.inputState.pushRepeatDigit('0')\n          } else {\n            return handler(e)\n          }\n        }\n      })(),\n      'vim:move-to-beginning-of-line': h({\n        keys: '0',\n        type: 'motion',\n        motion: 'moveToStartOfLine'\n      }),\n      'vim:move-to-first-character-of-line': h({\n        keys: '^',\n        type: 'motion',\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:move-to-first-character-of-line-and-down': h({\n        keys: '_',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true, repeatOffset: -1 }\n      }),\n      'vim:move-to-last-character-of-line': h({\n        keys: '$',\n        type: 'motion',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true }\n      }),\n      'vim:move-to-last-nonblank-character-of-line-and-down': () => {\n        '???'\n      },\n      'vim:move-to-first-character-of-line-up': h({\n        keys: '-',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, toFirstChar: true }\n      }),\n      'vim:move-to-first-character-of-line-down': h({\n        keys: '+',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true }\n      }),\n\n      'vim:move-to-start-of-file': h({\n        keys: 'gg',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: false,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim:scroll-half-screen-up': h({\n        keys: '<C-u>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: false, explicitRepeat: true }\n      }),\n      'vim:scroll-full-screen-up': h({\n        keys: '<C-b>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: false }\n      }),\n      'vim:scroll-half-screen-down': h({\n        keys: '<C-d>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: true, explicitRepeat: true }\n      }),\n      'vim:scroll-full-screen-down': h({\n        keys: '<C-f>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: true }\n      }),\n      'vim:scroll-down': h({\n        keys: '<C-e>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: true, linewise: true }\n      }),\n      'vim:scroll-up': h({\n        keys: '<C-y>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: false, linewise: true }\n      }),\n      'vim:scroll-cursor-to-top': h({\n        keys: 'z<CR>',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:scroll-cursor-to-top-leave': h({\n        keys: 'zt',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' }\n      }),\n      'vim:scroll-cursor-to-middle': h({\n        keys: 'z.',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:scroll-cursor-to-middle-leave': h({\n        keys: 'zz',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' }\n      }),\n      'vim:scroll-cursor-to-bottom': h({\n        keys: 'z-',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' }\n      }),\n      'vim:scroll-cursor-to-bottom-leave': h({\n        keys: 'zb',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:move-to-line': h({\n        keys: 'G',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: true,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim:move-to-top-of-screen': h({\n        keys: 'H',\n        type: 'motion',\n        motion: 'moveToTopLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim:move-to-bottom-of-screen': h({\n        keys: 'L',\n        type: 'motion',\n        motion: 'moveToBottomLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim:move-to-middle-of-screen': h({\n        keys: 'M',\n        type: 'motion',\n        motion: 'moveToMiddleLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n\n      'vim:delete': p({ keys: 'd', type: 'operator', operator: 'delete' }),\n      'vim:delete-to-last-character-of-line': h({\n        keys: 'D',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim:change': p({ keys: 'c', type: 'operator', operator: 'change' }),\n      'vim:change-to-last-character-of-line': h({\n        keys: 'C',\n        type: 'operatorMotion',\n        operator: 'change',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim:substitute-line': h({\n        keys: 'S',\n        type: 'keyToKey',\n        toKeys: 'cc',\n        context: 'normal'\n      }),\n      'vim:substitute-line-visual': h({\n        keys: 'S',\n        type: 'keyToKey',\n        toKeys: 'VdO',\n        context: 'visual'\n      }),\n      'vim:replace': b({\n        keys: 'r<character>',\n        type: 'action',\n        action: 'replace',\n        isEdit: true\n      }),\n      'vim:insert-at-beginning-of-line': h({\n        keys: 'I',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'firstNonBlank' },\n        context: 'normal'\n      }),\n      'vim:text-object-manipulation-inner': b({\n        keys: 'i<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation',\n        motionArgs: { textObjectInner: true }\n      }),\n      'vim:text-object-manipulation': b({\n        keys: 'a<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation'\n      }),\n      'vim:indent': p({\n        keys: '>',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: true }\n      }),\n      'vim:outdent': p({\n        keys: '<',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: false }\n      }),\n      'vim:auto-indent': () => {\n        'not supported'\n      },\n      'vim:join': h({\n        keys: 'J',\n        type: 'action',\n        action: 'joinLines',\n        isEdit: true\n      }),\n\n      'vim:yank': p({ keys: 'y', type: 'operator', operator: 'yank' }),\n      'vim:yank-line': h({\n        keys: 'Y',\n        type: 'operatorMotion',\n        operator: 'yank',\n        motion: 'expandToLine',\n        motionArgs: { linewise: true },\n        context: 'normal'\n      }),\n      'vim:put-before': h({\n        keys: 'P',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: false, isEdit: true }\n      }),\n      'vim:put-after': h({\n        keys: 'p',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: true, isEdit: true }\n      }),\n\n      'vim:toggle-case': h({\n        keys: 'g~',\n        type: 'operator',\n        operator: 'changeCase'\n      }),\n      'vim:upper-case': h({\n        keys: 'gU',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: false },\n        isEdit: true\n      }),\n      'vim:lower-case': h({\n        keys: 'gu',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: true },\n        isEdit: true\n      }),\n      'vim:toggle-case-now': h({\n        keys: '~',\n        type: 'operatorMotion',\n        operator: 'changeCase',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorArgs: { shouldMoveCursor: true },\n        context: 'normal'\n      }),\n\n      'vim:mark': b({\n        keys: 'm<character>',\n        type: 'action',\n        action: 'setMark'\n      }),\n      'vim:move-to-mark-literal': b({\n        keys: '`<character>',\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true }\n      }),\n      'vim:move-to-mark': b({\n        keys: \"'<character>\",\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true, linewise: true }\n      }),\n\n      'vim:find': b({\n        keys: 'f<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim:find-backwards': b({\n        keys: 'F<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim:till': b({\n        keys: 't<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim:till-backwards': b({\n        keys: 'T<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim:repeat-find': h({\n        keys: ';',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: true }\n      }),\n      'vim:repeat-find-reverse': h({\n        keys: ',',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: false }\n      }),\n\n      'vim:search': h({\n        keys: '/',\n        type: 'search',\n        searchArgs: { forward: true, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim:reverse-search': h({\n        keys: '?',\n        type: 'search',\n        searchArgs: { forward: false, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim:search-current-word': h({\n        keys: '*',\n        type: 'search',\n        searchArgs: {\n          forward: true,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim:reverse-search-current-word': h({\n        keys: '#',\n        type: 'search',\n        searchArgs: {\n          forward: false,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim:repeat-search': h({\n        keys: 'n',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim:repeat-search-backwards': h({\n        keys: 'N',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n\n      'vim:bracket-matching-motion': h({\n        keys: '%',\n        type: 'motion',\n        motion: 'moveToMatchedSymbol',\n        motionArgs: { inclusive: true, toJumplist: true }\n      }),\n\n      'vim:ex-command': h({ keys: ':', type: 'ex' }),\n\n      // normal mode\n      'vim:activate-insert-mode': h({\n        keys: 'i',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'inplace' },\n        context: 'normal'\n      }),\n      'vim:activate-replace-mode': h({\n        keys: 'R',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { replace: true }\n      }),\n      'vim:activate-characterwise-visual-mode': h({\n        keys: 'v',\n        type: 'action',\n        action: 'toggleVisualMode'\n      }),\n      'vim:activate-linewise-visual-mode': h({\n        keys: 'V',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { linewise: true }\n      }),\n      'vim:activate-blockwise-visual-mode': h({\n        keys: '<C-v>',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { blockwise: true }\n      }),\n\n      'vim:undo': h({\n        keys: 'u',\n        type: 'action',\n        action: 'undo',\n        context: 'normal'\n      }),\n\n      'vim:insert-above-with-newline': h({\n        keys: 'O',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: false },\n        context: 'normal'\n      }),\n      'vim:insert-below-with-newline': h({\n        keys: 'o',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: true },\n        context: 'normal'\n      }),\n      'vim:insert-after': h({\n        keys: 'a',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'charAfter' },\n        context: 'normal'\n      }),\n      'vim:insert-after-end-of-line': h({\n        keys: 'A',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'eol' },\n        context: 'normal'\n      }),\n      'vim:delete-right': h({\n        keys: 'x',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorMotionArgs: { visualLine: false }\n      }),\n      'vim:delete-left': h({\n        keys: 'X',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false },\n        operatorMotionArgs: { visualLine: true }\n      }),\n      'vim:substitute': h({\n        keys: 's',\n        type: 'keyToKey',\n        toKeys: 'cl',\n        context: 'normal'\n      }),\n      'vim:substitute-visual': h({\n        keys: 's',\n        type: 'keyToKey',\n        toKeys: 'c',\n        context: 'visual'\n      }),\n      'vim:repeat': h({\n        keys: '.',\n        type: 'action',\n        action: 'repeatLastEdit'\n      }),\n\n      'vim:increase': h({\n        keys: '<C-a>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: true, backtrack: false }\n      }),\n      'vim:decrease': h({\n        keys: '<C-x>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: false, backtrack: false }\n      }),\n\n      'vim:register-prefix': b({\n        keys: '\"<character>',\n        type: 'action',\n        action: 'setRegister'\n      }),\n\n      // insert mode\n      'vim:delete-to-beginning-of-word': h({\n        keys: '<C-w>',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false },\n        context: 'insert'\n      }),\n\n      // visual mode\n      'vim:insert-at-start-of-target': h({\n        keys: 'I',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'startOfSelectedArea' },\n        context: 'visual'\n      }),\n      'vim:insert-at-end-of-target': h({\n        keys: 'A',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'endOfSelectedArea' },\n        context: 'visual'\n      }),\n      'vim:reverse-selections': h({\n        keys: 'o',\n        type: 'motion',\n        motion: 'moveToOtherHighlightedEnd',\n        context: 'visual'\n      }),\n      'vim:reverse-selections-at-same-line': h({\n        keys: 'O',\n        type: 'motion',\n        motion: 'moveToOtherHighlightedEnd',\n        motionArgs: { sameLine: true },\n        context: 'visual'\n      })\n    }\n    disposables.add(inkdrop.commands.add(wrapper, handlers))\n    disposables.add(\n      inkdrop.commands.add(document.querySelector('.mde-preview'), {\n        'vim:move-to-start-of-file': ({ target }) => {\n          target.scrollTop = 0\n        },\n        'vim:scroll-up': ({ target }) => {\n          target.scrollTop -= 30\n        },\n        'vim:scroll-down': ({ target }) => {\n          target.scrollTop += 30\n        },\n        'vim:scroll-half-screen-up': ({ target }) => {\n          target.scrollTop -= target.clientHeight / 2\n        },\n        'vim:scroll-half-screen-down': ({ target }) => {\n          target.scrollTop += target.clientHeight / 2\n        },\n        'vim:scroll-full-screen-up': ({ target }) => {\n          target.scrollTop -= target.clientHeight\n        },\n        'vim:scroll-full-screen-down': ({ target }) => {\n          target.scrollTop += target.clientHeight\n        },\n        'vim:move-to-line': ({ target }) => {\n          target.scrollTop = target.scrollHeight\n        }\n      })\n    )\n    wrapper.addEventListener('textInput', this.handleEditorTextInput)\n    wrapper.addEventListener('keydown', this.handleEditorKeyDown)\n    disposables.add(\n      new Disposable(() =>\n        wrapper.removeEventListener('keydown', this.handleEditorKeyDown)\n      )\n    )\n\n    this.disposables = disposables\n  }\n\n  registerExCommands() {\n    const el = this.getCodeMirror().getWrapperElement()\n    this.vim.defineEx('write', 'w', () => {\n      inkdrop.commands.dispatch(el, 'core:save-note')\n    })\n    this.vim.defineEx('next', 'n', () => {\n      inkdrop.commands.dispatch(el, 'core:open-next-note')\n    })\n    this.vim.defineEx('prev', '', () => {\n      inkdrop.commands.dispatch(el, 'core:open-prev-note')\n    })\n    this.vim.defineEx('preview', 'p', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-preview')\n    })\n    this.vim.defineEx('side-by-side', 'side', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-side-by-side')\n    })\n  }\n\n  getCodeMirror() {\n    return inkdrop.getActiveEditor().cm\n  }\n\n  yankClipboard() {\n    const state = this.vim.getVimGlobalState()\n    const text = clipboard.readText()\n    const linewise = text.indexOf('\\n') >= 0\n    state.registerController.pushText('0', 'yank', text, linewise, true)\n  }\n\n  handleEditorLoad = editor => {\n    this.activateMode(editor)\n  }\n\n  handleVimModeChange = (event, _opt) => {\n    logger.debug('vim mode changed:', event)\n    const { mode } = event\n    const cm = this.getCodeMirror()\n    cm.getWrapperElement().classList.remove('insert-mode')\n    cm.getWrapperElement().classList.remove('visual-mode')\n    cm.getWrapperElement().classList.remove('normal-mode')\n    cm.getWrapperElement().classList.remove('replace-mode')\n    switch (mode) {\n      case 'normal':\n        cm.getWrapperElement().classList.add('normal-mode')\n        break\n      case 'visual':\n        cm.getWrapperElement().classList.add('visual-mode')\n        break\n      case 'replace':\n        cm.getWrapperElement().classList.add('replace-mode')\n        break\n      case 'insert':\n        cm.getWrapperElement().classList.add('insert-mode')\n        break\n    }\n  }\n\n  handleEditorTextInput = event => {\n    // only process if the event is fired via EventTarget.dispatchEvent()\n    if (this.isInsertMode() && !event.isTrusted) {\n      logger.debug('handle text input:', event)\n      const text = event.data\n      const cm = this.getCodeMirror()\n      cm.replaceSelection(text)\n    }\n  }\n\n  handleEditorKeyDown = event => {\n    const normalizeKeyName = key => {\n      switch (key) {\n        case 'Enter':\n          return 'enter'\n        case ' ':\n          return 'space'\n        case 'ArrowRight':\n          return 'right'\n        case 'ArrowLeft':\n          return 'left'\n        case 'ArrowUp':\n          return 'up'\n        case 'ArrowDown':\n          return 'down'\n        default:\n          return key\n      }\n    }\n    const keyName = normalizeKeyName(event.key)\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const isNumeric =\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.shiftKey &&\n      keyName.match(/^\\d$/)\n\n    const keyBinding = inkdrop.keymaps.findKeyBindings({\n      keystrokes: keyName,\n      target: cm.getInputField()\n    })\n\n    if (this.isBufferingKey()) {\n      logger.debug('handle key buffering:', keyName, event)\n      const b = cm\n        .getInputField()\n        .webkitMatchesSelector(\n          '.CodeMirror.vim-mode:not(.insert-mode) textarea'\n        )\n      logger.debug('keybinding check:', keyBinding, b)\n\n      if (\n        keyName !== 'Ctrl' &&\n        keyName !== 'Alt' &&\n        keyName !== 'Shift' &&\n        keyName !== 'Meta'\n      ) {\n        const { inputState } = vim\n        const hasOperatorOrMotion = inputState.motion || inputState.operator\n        if (\n          (keyName.length === 1 || keyName === 'space') &&\n          (!isNumeric || !hasOperatorOrMotion)\n        ) {\n          inputState.selectedCharacter = event.key\n          inputState.keyBuffer = ''\n\n          if (keyBinding.length === 0) {\n            const { pendingCommand } = this\n            this.stopBufferingKey()\n\n            if (typeof pendingCommand === 'function') {\n              pendingCommand(event)\n            }\n\n            event.stopPropagation()\n            event.preventDefault()\n          }\n        } else if (isNumeric) {\n          vim.inputState.pushRepeatDigit(keyName)\n        }\n      }\n    } else if (!this.isInsertMode()) {\n      if (isNumeric) {\n        if (keyBinding.length === 0) {\n          vim.inputState.pushRepeatDigit(keyName)\n        }\n      } else {\n        // push key buffer to the repeat digit\n        const keys = vim.inputState.keyBuffer\n        vim.inputState.keyBuffer = ''\n        const keysMatcher = /^(\\d*)(.*)$/.exec(keys)\n        if (keysMatcher[1] && keysMatcher[1] !== '0') {\n          vim.inputState.pushRepeatDigit(keysMatcher[1])\n        }\n      }\n    }\n  }\n\n  handleFocusEditor = _event => {\n    this.yankClipboard()\n  }\n}\n\nmodule.exports = new Plugin()\n"],"file":"vim.js"}