{"version":3,"file":"vim.js","names":["Plugin","editor","activateMode","event","_opt","logger","debug","mode","cm","getCodeMirror","getWrapperElement","classList","remove","add","isInsertMode","isTrusted","text","data","replaceSelection","keyName","normalizeKeyName","key","vim","maybeInitVimState","isNumeric","ctrlKey","altKey","metaKey","shiftKey","match","target","getInputField","currentKeyStroke","inkdrop","keymaps","queuedKeystrokes","filter","k","startsWith","partialMatchCandidates","exactMatchCandidates","findMatchCandidates","partialMatches","findPartialMatches","exactMatches","findExactMatches","isBufferingKey","b","webkitMatchesSelector","inputState","hasOperatorOrMotion","motion","operator","length","selectedCharacter","keyBuffer","pendingCommand","stopBufferingKey","stopPropagation","preventDefault","pushRepeatDigit","keys","keysMatcher","exec","_event","yankClipboard","activate","CodeMirror","isEditorActive","getActiveEditor","onEditorLoad","handleEditorLoad","deactivate","disposables","dispose","deactivateMode","originalKeyMap","getOption","setOption","on","handleVimModeChange","handleFocusEditor","el","registerCommands","registerExCommands","off","startBufferingKey","command","customBufferingModeClass","wrapper","classes","Array","prototype","slice","apply","i","undefined","contains","bufferKey","vimKey","cmKeyToVimKey","CompositeDisposable","doKeyToKey","toKeys","substring","index","handleEditorKeyDown","KeyboardEvent","bindings","document","activeElement","commands","dispatch","h","e","Object","assign","state","operation","curOp","isVimOp","type","commandDispatcher","processCommand","Vim","suppressErrorLogging","console","error","originalEvent","p","visualMode","keyBinding","findKeyBindings","keystrokes","handlers","clearInputState","exitVisualMode","exitInsertMode","motionArgs","forward","cur","getCursor","line","ch","body","linewise","wordEnd","bigWord","inclusive","toJumplist","handler","getRepeat","toFirstChar","repeatOffset","explicitRepeat","action","actionArgs","position","context","isEdit","insertAt","textObjectInner","operatorArgs","indentRight","after","toLower","shouldMoveCursor","searchArgs","querySrc","wholeWordOnly","replace","blockwise","interlaceInsertRepeat","operatorMotionArgs","visualLine","increase","backtrack","sameLine","querySelector","scrollTop","clientHeight","scrollHeight","addEventListener","handleEditorTextInput","Disposable","removeEventListener","defineEx","getVimGlobalState","clipboard","readText","indexOf","registerController","pushText","module","exports"],"sources":["../src/vim.js"],"sourcesContent":["import { logger } from 'inkdrop'\nimport vimKeymap from './keymap'\nimport { CompositeDisposable, Disposable } from 'event-kit'\nimport CodeMirror from 'codemirror'\nimport { clipboard } from 'electron'\n\nclass Plugin {\n  activate() {\n    this.vim = vimKeymap(CodeMirror)\n    if (inkdrop.isEditorActive()) {\n      this.activateMode(inkdrop.getActiveEditor())\n    }\n    inkdrop.onEditorLoad(this.handleEditorLoad)\n  }\n\n  deactivate() {\n    if (this.disposables) {\n      this.disposables.dispose()\n    }\n    if (inkdrop.isEditorActive()) {\n      this.deactivateMode(inkdrop.getActiveEditor())\n    }\n  }\n\n  activateMode(editor) {\n    const { cm } = editor\n    this.originalKeyMap = cm.getOption('keyMap')\n    cm.setOption('keyMap', 'vim')\n    cm.on('vim-mode-change', this.handleVimModeChange)\n    cm.on('focus', this.handleFocusEditor)\n\n    const el = cm.getWrapperElement()\n    el.classList.add('vim-mode', 'normal-mode')\n\n    this.registerCommands()\n    this.registerExCommands()\n  }\n\n  deactivateMode(editor) {\n    const { cm } = editor\n    if (cm && this.originalKeyMap) {\n      cm.setOption('keyMap', this.originalKeyMap)\n      cm.off('vim-mode-change', this.handleVimModeChange)\n      const el = cm.getWrapperElement()\n      el.classList.remove('vim-mode')\n    }\n  }\n\n  normalizeKeyName(key) {\n    switch (key) {\n      case 'Enter':\n        return 'enter'\n      case ' ':\n        return 'space'\n      case 'ArrowRight':\n        return 'right'\n      case 'ArrowLeft':\n        return 'left'\n      case 'ArrowUp':\n        return 'up'\n      case 'ArrowDown':\n        return 'down'\n      default:\n        if (key.match(/^[A-Z]$/)) {\n          return `shift-${key}`\n        }\n        return key\n    }\n  }\n\n  startBufferingKey(command, customBufferingModeClass) {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    logger.debug('Start key buffering')\n    wrapper.classList.add('key-buffering')\n    if (customBufferingModeClass) {\n      wrapper.classList.add('key-buffering-' + customBufferingModeClass)\n    }\n    this.pendingCommand = command\n  }\n\n  stopBufferingKey() {\n    logger.debug('Stop key buffering')\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    const classes = Array.prototype.slice.apply(wrapper.classList)\n    for (const i of classes) {\n      if (i.startsWith('key-buffering')) {\n        wrapper.classList.remove(i)\n      }\n    }\n    this.pendingCommand = undefined\n  }\n\n  isBufferingKey() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('key-buffering')\n  }\n\n  bufferKey(key) {\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const vimKey = this.vim.cmKeyToVimKey(\"'\" + key + \"'\")\n    vim.inputState.keyBuffer = vim.inputState.keyBuffer + vimKey\n    logger.debug('keyBuffer:', vim.inputState.keyBuffer, vim.inputState)\n  }\n\n  isInsertMode() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('insert-mode')\n  }\n\n  registerCommands() {\n    const disposables = new CompositeDisposable()\n    const editor = inkdrop.getActiveEditor()\n    const { cm } = editor\n    const wrapper = cm.getWrapperElement()\n\n    const doKeyToKey = async command => {\n      logger.debug('doKeyToKey:', command)\n      let keys = command.toKeys\n      while (keys) {\n        // Pull off one command key, which is either a single character\n        // or a special sequence wrapped in '<' and '>', e.g. '<Space>'.\n        const match = /<\\w+-.+?>|<\\w+>|./.exec(keys)\n        let key = match[0]\n        logger.debug('key:', key)\n        keys = keys.substring(match.index + key.length)\n\n        if (this.isBufferingKey()) {\n          this.handleEditorKeyDown(new KeyboardEvent('keydown', { key }))\n        } else {\n          if (key.match(/^[A-Z]$/)) {\n            key = 'shift-' + key\n          }\n          const { exactMatchCandidates } = inkdrop.keymaps.findMatchCandidates([\n            key\n          ])\n          logger.debug('exactMatchCandidates:', exactMatchCandidates)\n          const bindings = inkdrop.keymaps.findExactMatches(\n            exactMatchCandidates,\n            document.activeElement\n          )\n          const b = bindings[0]\n          if (b) {\n            inkdrop.commands.dispatch(document.activeElement, b.command)\n          } else {\n            logger.debug('command not found for key:', key)\n          }\n        }\n      }\n    }\n\n    // bind key to command\n    const h = command => {\n      return e => {\n        logger.debug(\n          'command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState)\n        )\n        e.stopPropagation()\n        const vim = this.vim.maybeInitVimState(cm)\n        return cm.operation(() => {\n          cm.curOp.isVimOp = true\n          try {\n            if (command.type === 'keyToKey') {\n              doKeyToKey(command)\n            } else {\n              this.vim.commandDispatcher.processCommand(cm, vim, command)\n            }\n          } catch (e) {\n            // clear VIM state in case it's in a bad state.\n            cm.state.vim = undefined\n            this.vim.maybeInitVimState(cm)\n            if (!CodeMirror.Vim.suppressErrorLogging) {\n              console.error(e)\n            }\n            throw e\n          }\n          return true\n        })\n      }\n    }\n    // bind keystroke to command\n    const b = command => {\n      return e => {\n        logger.debug(\n          'buffer command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent\n        )\n        this.startBufferingKey(h(command), 'command')\n        this.bufferKey(e.originalEvent.key)\n      }\n    }\n    // bind keystroke to operator\n    const p = command => {\n      return e => {\n        logger.debug(\n          'operator command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent,\n          e\n        )\n        const vim = this.vim.maybeInitVimState(cm)\n        if (\n          !vim.inputState.operator &&\n          !this.isBufferingKey() &&\n          !vim.visualMode\n        ) {\n          this.startBufferingKey(e => {\n            const el = cm.getInputField()\n            const keyName = this.normalizeKeyName(e.key)\n            const keyBinding = inkdrop.keymaps.findKeyBindings({\n              keystrokes: keyName,\n              target: el\n            })\n            if (keyBinding.length > 0) {\n              inkdrop.commands.dispatch(el, keyBinding[0].command)\n              return true\n            } else {\n              return false\n            }\n          }, 'operator')\n          if (e.originalEvent) {\n            this.bufferKey(e.originalEvent.key)\n          } else {\n            logger.debug('buffer key:', command.keys)\n            this.bufferKey(command.keys)\n          }\n        }\n        return h(command)(e)\n      }\n    }\n    const handlers = {\n      'vim:native!': () => {},\n      'vim:reset-normal-mode': e => {\n        CodeMirror.Vim.clearInputState(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim:exit-visual-mode': e => {\n        logger.debug('exit-visual-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitVisualMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim:exit-insert-mode': e => {\n        logger.debug('exit-insert-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitInsertMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim:move-left': h({\n        keys: 'h',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false }\n      }),\n      'vim:move-right': h({\n        keys: 'l',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true }\n      }),\n      'vim:move-up': (command => {\n        return e => {\n          const cur = cm.getCursor()\n          if (cur.line === 0 && cur.ch === 0) {\n            e.stopPropagation()\n            inkdrop.commands.dispatch(document.body, 'editor:title:focus')\n          } else {\n            command(e)\n          }\n        }\n      })(\n        h({\n          keys: 'k',\n          type: 'motion',\n          motion: 'moveByLines',\n          motionArgs: { forward: false, linewise: true }\n        })\n      ),\n      'vim:move-down': h({\n        keys: 'j',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, linewise: true }\n      }),\n      'vim:move-up-by-display-lines': h({\n        keys: 'gk',\n        type: 'motion',\n        motion: 'moveByDisplayLines',\n        motionArgs: { forward: false }\n      }),\n      'vim:move-down-by-display-lines': h({\n        keys: 'gj',\n        type: 'motion',\n        motion: 'moveByDisplayLines',\n        motionArgs: { forward: true }\n      }),\n\n      'vim:move-to-next-word': h({\n        keys: 'w',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false }\n      }),\n      'vim:move-to-next-whole-word': h({\n        keys: 'W',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false, bigWord: true }\n      }),\n      'vim:move-to-end-of-word': h({\n        keys: 'e',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: true, inclusive: true }\n      }),\n      'vim:move-to-previous-end-of-word': h({\n        keys: 'ge',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: true, inclusive: true }\n      }),\n      'vim:move-to-end-of-whole-word': h({\n        keys: 'E',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: true,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim:move-to-previous-end-of-whole-word': h({\n        keys: 'gE',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: false,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim:move-to-previous-word': h({\n        keys: 'b',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false }\n      }),\n      'vim:move-to-previous-whole-word': h({\n        keys: 'B',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false, bigWord: true }\n      }),\n      'vim:move-to-next-paragraph': h({\n        keys: '}',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim:move-to-previous-paragraph': h({\n        keys: '{',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n      'vim:move-to-beginning-of-line-with-zero': (() => {\n        const handler = h({\n          keys: '0',\n          type: 'motion',\n          motion: 'moveToStartOfLine'\n        })\n        return e => {\n          const vim = this.vim.maybeInitVimState(cm)\n          if (vim.inputState.getRepeat() > 0) {\n            vim.inputState.pushRepeatDigit('0')\n          } else {\n            return handler(e)\n          }\n        }\n      })(),\n      'vim:move-to-beginning-of-line': h({\n        keys: '0',\n        type: 'motion',\n        motion: 'moveToStartOfLine'\n      }),\n      'vim:move-to-first-character-of-line': h({\n        keys: '^',\n        type: 'motion',\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:move-to-first-character-of-line-and-down': h({\n        keys: '_',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true, repeatOffset: -1 }\n      }),\n      'vim:move-to-last-character-of-line': h({\n        keys: '$',\n        type: 'motion',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true }\n      }),\n      'vim:move-to-last-nonblank-character-of-line-and-down': () => {\n        '???'\n      },\n      'vim:move-to-first-character-of-line-up': h({\n        keys: '-',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, toFirstChar: true }\n      }),\n      'vim:move-to-first-character-of-line-down': h({\n        keys: '+',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true }\n      }),\n\n      'vim:move-to-start-of-file': h({\n        keys: 'gg',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: false,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim:scroll-half-screen-up': h({\n        keys: '<C-u>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: false, explicitRepeat: true }\n      }),\n      'vim:scroll-full-screen-up': h({\n        keys: '<C-b>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: false }\n      }),\n      'vim:scroll-half-screen-down': h({\n        keys: '<C-d>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: true, explicitRepeat: true }\n      }),\n      'vim:scroll-full-screen-down': h({\n        keys: '<C-f>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: true }\n      }),\n      'vim:scroll-down': h({\n        keys: '<C-e>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: true, linewise: true }\n      }),\n      'vim:scroll-up': h({\n        keys: '<C-y>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: false, linewise: true }\n      }),\n      'vim:scroll-cursor-to-top': h({\n        keys: 'z<CR>',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:scroll-cursor-to-top-leave': h({\n        keys: 'zt',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' }\n      }),\n      'vim:scroll-cursor-to-middle': h({\n        keys: 'z.',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:scroll-cursor-to-middle-leave': h({\n        keys: 'zz',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' }\n      }),\n      'vim:scroll-cursor-to-bottom': h({\n        keys: 'z-',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' }\n      }),\n      'vim:scroll-cursor-to-bottom-leave': h({\n        keys: 'zb',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim:move-to-line': h({\n        keys: 'G',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: true,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim:move-to-top-of-screen': h({\n        keys: 'H',\n        type: 'motion',\n        motion: 'moveToTopLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim:move-to-bottom-of-screen': h({\n        keys: 'L',\n        type: 'motion',\n        motion: 'moveToBottomLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim:move-to-middle-of-screen': h({\n        keys: 'M',\n        type: 'motion',\n        motion: 'moveToMiddleLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n\n      'vim:delete': p({ keys: 'd', type: 'operator', operator: 'delete' }),\n      'vim:delete-to-last-character-of-line': h({\n        keys: 'D',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim:change': p({ keys: 'c', type: 'operator', operator: 'change' }),\n      'vim:change-to-last-character-of-line': h({\n        keys: 'C',\n        type: 'operatorMotion',\n        operator: 'change',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim:substitute-line': h({\n        keys: 'S',\n        type: 'keyToKey',\n        toKeys: 'cc',\n        context: 'normal'\n      }),\n      'vim:substitute-line-visual': h({\n        keys: 'S',\n        type: 'keyToKey',\n        toKeys: 'VdO',\n        context: 'visual'\n      }),\n      'vim:replace': b({\n        keys: 'r<character>',\n        type: 'action',\n        action: 'replace',\n        isEdit: true\n      }),\n      'vim:insert-at-beginning-of-line': h({\n        keys: 'I',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'firstNonBlank' },\n        context: 'normal'\n      }),\n      'vim:text-object-manipulation-inner': b({\n        keys: 'i<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation',\n        motionArgs: { textObjectInner: true }\n      }),\n      'vim:text-object-manipulation': b({\n        keys: 'a<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation'\n      }),\n      'vim:indent': p({\n        keys: '>',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: true }\n      }),\n      'vim:outdent': p({\n        keys: '<',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: false }\n      }),\n      'vim:auto-indent': () => {\n        'not supported'\n      },\n      'vim:reselect-last-selection': h({\n        keys: 'gv',\n        type: 'action',\n        action: 'reselectLastSelection'\n      }),\n      'vim:join': h({\n        keys: 'J',\n        type: 'action',\n        action: 'joinLines',\n        isEdit: true\n      }),\n\n      'vim:yank': p({ keys: 'y', type: 'operator', operator: 'yank' }),\n      'vim:yank-line': h({\n        keys: 'Y',\n        type: 'operatorMotion',\n        operator: 'yank',\n        motion: 'expandToLine',\n        motionArgs: { linewise: true },\n        context: 'normal'\n      }),\n      'vim:put-before': h({\n        keys: 'P',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: false, isEdit: true }\n      }),\n      'vim:put-after': h({\n        keys: 'p',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: true, isEdit: true }\n      }),\n\n      'vim:toggle-case': h({\n        keys: 'g~',\n        type: 'operator',\n        operator: 'changeCase'\n      }),\n      'vim:upper-case': h({\n        keys: 'gU',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: false },\n        isEdit: true\n      }),\n      'vim:lower-case': h({\n        keys: 'gu',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: true },\n        isEdit: true\n      }),\n      'vim:toggle-case-now': h({\n        keys: '~',\n        type: 'operatorMotion',\n        operator: 'changeCase',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorArgs: { shouldMoveCursor: true },\n        context: 'normal'\n      }),\n\n      'vim:mark': b({\n        keys: 'm<character>',\n        type: 'action',\n        action: 'setMark'\n      }),\n      'vim:move-to-mark-literal': b({\n        keys: '`<character>',\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true }\n      }),\n      'vim:move-to-mark': b({\n        keys: \"'<character>\",\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true, linewise: true }\n      }),\n\n      'vim:find': b({\n        keys: 'f<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim:find-backwards': b({\n        keys: 'F<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim:till': b({\n        keys: 't<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim:till-backwards': b({\n        keys: 'T<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim:repeat-find': h({\n        keys: ';',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: true }\n      }),\n      'vim:repeat-find-reverse': h({\n        keys: ',',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: false }\n      }),\n\n      'vim:search': h({\n        keys: '/',\n        type: 'search',\n        searchArgs: { forward: true, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim:reverse-search': h({\n        keys: '?',\n        type: 'search',\n        searchArgs: { forward: false, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim:search-current-word': h({\n        keys: '*',\n        type: 'search',\n        searchArgs: {\n          forward: true,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim:reverse-search-current-word': h({\n        keys: '#',\n        type: 'search',\n        searchArgs: {\n          forward: false,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim:repeat-search': h({\n        keys: 'n',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim:repeat-search-backwards': h({\n        keys: 'N',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n\n      'vim:bracket-matching-motion': h({\n        keys: '%',\n        type: 'motion',\n        motion: 'moveToMatchedSymbol',\n        motionArgs: { inclusive: true, toJumplist: true }\n      }),\n\n      'vim:ex-command': h({ keys: ':', type: 'ex' }),\n\n      // normal mode\n      'vim:activate-insert-mode': h({\n        keys: 'i',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'inplace' },\n        context: 'normal'\n      }),\n      'vim:activate-replace-mode': h({\n        keys: 'R',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { replace: true }\n      }),\n      'vim:activate-characterwise-visual-mode': h({\n        keys: 'v',\n        type: 'action',\n        action: 'toggleVisualMode'\n      }),\n      'vim:activate-linewise-visual-mode': h({\n        keys: 'V',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { linewise: true }\n      }),\n      'vim:activate-blockwise-visual-mode': h({\n        keys: '<C-v>',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { blockwise: true }\n      }),\n\n      'vim:undo': h({\n        keys: 'u',\n        type: 'action',\n        action: 'undo',\n        context: 'normal'\n      }),\n\n      'vim:insert-above-with-newline': h({\n        keys: 'O',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: false },\n        context: 'normal'\n      }),\n      'vim:insert-below-with-newline': h({\n        keys: 'o',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: true },\n        context: 'normal'\n      }),\n      'vim:insert-after': h({\n        keys: 'a',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'charAfter' },\n        context: 'normal'\n      }),\n      'vim:insert-after-end-of-line': h({\n        keys: 'A',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'eol' },\n        context: 'normal'\n      }),\n      'vim:delete-right': h({\n        keys: 'x',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorMotionArgs: { visualLine: false }\n      }),\n      'vim:delete-left': h({\n        keys: 'X',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false },\n        operatorMotionArgs: { visualLine: true }\n      }),\n      'vim:substitute': h({\n        keys: 's',\n        type: 'keyToKey',\n        toKeys: 'cl',\n        context: 'normal'\n      }),\n      'vim:substitute-visual': h({\n        keys: 's',\n        type: 'keyToKey',\n        toKeys: 'c',\n        context: 'visual'\n      }),\n      'vim:repeat': h({\n        keys: '.',\n        type: 'action',\n        action: 'repeatLastEdit'\n      }),\n\n      'vim:increase': h({\n        keys: '<C-a>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: true, backtrack: false }\n      }),\n      'vim:decrease': h({\n        keys: '<C-x>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: false, backtrack: false }\n      }),\n\n      'vim:register-prefix': b({\n        keys: '\"<character>',\n        type: 'action',\n        action: 'setRegister'\n      }),\n\n      // insert mode\n      'vim:delete-to-beginning-of-word': h({\n        keys: '<C-w>',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false },\n        context: 'insert'\n      }),\n\n      // visual mode\n      'vim:insert-at-start-of-target': h({\n        keys: 'I',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'startOfSelectedArea' },\n        context: 'visual'\n      }),\n      'vim:insert-at-end-of-target': h({\n        keys: 'A',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'endOfSelectedArea' },\n        context: 'visual'\n      }),\n      'vim:reverse-selections': h({\n        keys: 'o',\n        type: 'motion',\n        motion: 'moveToOtherHighlightedEnd',\n        context: 'visual'\n      }),\n      'vim:reverse-selections-at-same-line': h({\n        keys: 'O',\n        type: 'motion',\n        motion: 'moveToOtherHighlightedEnd',\n        motionArgs: { sameLine: true },\n        context: 'visual'\n      })\n    }\n    disposables.add(inkdrop.commands.add(wrapper, handlers))\n    disposables.add(\n      inkdrop.commands.add(document.querySelector('.mde-preview'), {\n        'vim:move-to-start-of-file': ({ target }) => {\n          target.scrollTop = 0\n        },\n        'vim:scroll-up': ({ target }) => {\n          target.scrollTop -= 30\n        },\n        'vim:scroll-down': ({ target }) => {\n          target.scrollTop += 30\n        },\n        'vim:scroll-half-screen-up': ({ target }) => {\n          target.scrollTop -= target.clientHeight / 2\n        },\n        'vim:scroll-half-screen-down': ({ target }) => {\n          target.scrollTop += target.clientHeight / 2\n        },\n        'vim:scroll-full-screen-up': ({ target }) => {\n          target.scrollTop -= target.clientHeight\n        },\n        'vim:scroll-full-screen-down': ({ target }) => {\n          target.scrollTop += target.clientHeight\n        },\n        'vim:move-to-line': ({ target }) => {\n          target.scrollTop = target.scrollHeight\n        }\n      })\n    )\n    wrapper.addEventListener('textInput', this.handleEditorTextInput)\n    wrapper.addEventListener('keydown', this.handleEditorKeyDown)\n    disposables.add(\n      new Disposable(() =>\n        wrapper.removeEventListener('keydown', this.handleEditorKeyDown)\n      )\n    )\n\n    this.disposables = disposables\n  }\n\n  registerExCommands() {\n    const el = this.getCodeMirror().getWrapperElement()\n    this.vim.defineEx('write', 'w', () => {\n      inkdrop.commands.dispatch(el, 'core:save-note')\n    })\n    this.vim.defineEx('next', 'n', () => {\n      inkdrop.commands.dispatch(el, 'core:open-next-note')\n    })\n    this.vim.defineEx('prev', '', () => {\n      inkdrop.commands.dispatch(el, 'core:open-prev-note')\n    })\n    this.vim.defineEx('preview', 'p', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-preview')\n    })\n    this.vim.defineEx('side-by-side', 'side', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-side-by-side')\n    })\n  }\n\n  getCodeMirror() {\n    return inkdrop.getActiveEditor().cm\n  }\n\n  yankClipboard() {\n    const state = this.vim.getVimGlobalState()\n    const text = clipboard.readText()\n    const linewise = text.indexOf('\\n') >= 0\n    state.registerController.pushText('0', 'yank', text, linewise, true)\n  }\n\n  handleEditorLoad = editor => {\n    this.activateMode(editor)\n  }\n\n  handleVimModeChange = (event, _opt) => {\n    logger.debug('vim mode changed:', event)\n    const { mode } = event\n    const cm = this.getCodeMirror()\n    cm.getWrapperElement().classList.remove('insert-mode')\n    cm.getWrapperElement().classList.remove('visual-mode')\n    cm.getWrapperElement().classList.remove('normal-mode')\n    cm.getWrapperElement().classList.remove('replace-mode')\n    switch (mode) {\n      case 'normal':\n        cm.getWrapperElement().classList.add('normal-mode')\n        break\n      case 'visual':\n        cm.getWrapperElement().classList.add('visual-mode')\n        break\n      case 'replace':\n        cm.getWrapperElement().classList.add('replace-mode')\n        break\n      case 'insert':\n        cm.getWrapperElement().classList.add('insert-mode')\n        break\n    }\n  }\n\n  handleEditorTextInput = event => {\n    // only process if the event is fired via EventTarget.dispatchEvent()\n    if (this.isInsertMode() && !event.isTrusted) {\n      logger.debug('handle text input:', event)\n      const text = event.data\n      const cm = this.getCodeMirror()\n      cm.replaceSelection(text)\n    }\n  }\n\n  handleEditorKeyDown = event => {\n    const keyName = this.normalizeKeyName(event.key)\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const isNumeric =\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.shiftKey &&\n      keyName.match(/^\\d$/)\n\n    const target = cm.getInputField()\n    const currentKeyStroke = [\n      ...inkdrop.keymaps.queuedKeystrokes.filter(k => !k.startsWith('^')),\n      keyName\n    ]\n    const { partialMatchCandidates, exactMatchCandidates } =\n      inkdrop.keymaps.findMatchCandidates(currentKeyStroke)\n    const partialMatches = inkdrop.keymaps.findPartialMatches(\n      partialMatchCandidates,\n      target\n    )\n    const exactMatches = inkdrop.keymaps.findExactMatches(\n      exactMatchCandidates,\n      target\n    )\n    logger.debug('handleEditorKeyDown: currentKeyStroke:', currentKeyStroke)\n    logger.debug('handleEditorKeyDown: exactMatches:', exactMatches)\n    logger.debug('handleEditorKeyDown: partialMatches:', partialMatches)\n\n    if (this.isBufferingKey()) {\n      logger.debug('handleEditorKeyDown: handle key buffering:', keyName, event)\n      const b = cm\n        .getInputField()\n        .webkitMatchesSelector(\n          '.CodeMirror.vim-mode:not(.insert-mode) textarea'\n        )\n      logger.debug('handleEditorKeyDown: keybinding check:', exactMatches, b)\n\n      if (\n        keyName !== 'Ctrl' &&\n        keyName !== 'Alt' &&\n        keyName !== 'Shift' &&\n        keyName !== 'Meta'\n      ) {\n        const { inputState } = vim\n        const hasOperatorOrMotion = inputState.motion || inputState.operator\n        if (\n          (event.key.length === 1 || keyName === 'space') &&\n          (!isNumeric || !hasOperatorOrMotion)\n        ) {\n          inputState.selectedCharacter = event.key\n          inputState.keyBuffer = ''\n\n          if (exactMatches.length === 0 && partialMatches.length === 0) {\n            const { pendingCommand } = this\n            this.stopBufferingKey()\n\n            if (typeof pendingCommand === 'function') {\n              if (pendingCommand(event)) {\n                event.stopPropagation()\n                event.preventDefault()\n              }\n            }\n          }\n        } else if (isNumeric) {\n          vim.inputState.pushRepeatDigit(keyName)\n        }\n      }\n    } else if (!this.isInsertMode()) {\n      if (isNumeric) {\n        if (exactMatches.length === 0) {\n          vim.inputState.pushRepeatDigit(keyName)\n        }\n      } else {\n        // push key buffer to the repeat digit\n        const keys = vim.inputState.keyBuffer\n        vim.inputState.keyBuffer = ''\n        const keysMatcher = /^(\\d*)(.*)$/.exec(keys)\n        if (keysMatcher[1] && keysMatcher[1] !== '0') {\n          vim.inputState.pushRepeatDigit(keysMatcher[1])\n        }\n      }\n    }\n  }\n\n  handleFocusEditor = _event => {\n    this.yankClipboard()\n  }\n}\n\nmodule.exports = new Plugin()\n"],"mappings":"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"}